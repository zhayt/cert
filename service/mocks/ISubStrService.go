// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ISubStrService is an autogenerated mock type for the ISubStrService type
type ISubStrService struct {
	mock.Mock
}

// LongestSubstring provides a mock function with given fields: str
func (_m *ISubStrService) LongestSubstring(str string) (string, error) {
	ret := _m.Called(str)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(str)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(str)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(str)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewISubStrService creates a new instance of ISubStrService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewISubStrService(t interface {
	mock.TestingT
	Cleanup(func())
}) *ISubStrService {
	mock := &ISubStrService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
